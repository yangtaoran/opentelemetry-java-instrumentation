name: CI build

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0

      - name: Set up JDK 11 for running Gradle
        uses: actions/setup-java@v2
        with:
          distribution: adopt
          java-version: 11

      - name: Build
        env:
          GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
          GE_CACHE_USERNAME: ${{ secrets.GE_CACHE_USERNAME }}
          GE_CACHE_PASSWORD: ${{ secrets.GE_CACHE_PASSWORD }}
        uses: gradle/gradle-build-action@v2
        with:
          arguments: build

  build-gradle-plugins:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0

      - name: Set up JDK 11 for running Gradle
        uses: actions/setup-java@v2
        with:
          distribution: adopt
          java-version: 11

      - name: Build
        run: ../gradlew build
        working-directory: gradle-plugins

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        test-java-version:
          - 8
          - 11
          - 15
        vm:
          - hotspot
          - openj9
      fail-fast: false
    steps:
      - uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0

      - id: setup-test-java
        name: Set up JDK ${{ matrix.test-java-version }}-${{ matrix.vm }} for running tests
        uses: actions/setup-java@v2
        with:
          distribution: adopt-${{ matrix.vm }}
          java-version: ${{ matrix.test-java-version }}

      - name: Set up JDK 11 for running Gradle
        uses: actions/setup-java@v2
        with:
          distribution: adopt
          java-version: 11

      - name: Test
        env:
          GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
          GE_CACHE_USERNAME: ${{ secrets.GE_CACHE_USERNAME }}
          GE_CACHE_PASSWORD: ${{ secrets.GE_CACHE_PASSWORD }}
        uses: gradle/gradle-build-action@v2
        with:
          arguments: test -PtestJavaVersion=${{ matrix.test-java-version }} -PtestJavaVM=${{ matrix.vm }} -Porg.gradle.java.installations.paths=${{ steps.setup-test-java.outputs.path }} -Porg.gradle.java.installations.auto-download=false

  testLatestDeps:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0

      - name: Set up JDK 11 for running Gradle
        uses: actions/setup-java@v2
        with:
          distribution: adopt
          java-version: 11

      - name: Test
        env:
          GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
          GE_CACHE_USERNAME: ${{ secrets.GE_CACHE_USERNAME }}
          GE_CACHE_PASSWORD: ${{ secrets.GE_CACHE_PASSWORD }}
        uses: gradle/gradle-build-action@v2
        with:
          arguments: test -PtestLatestDeps=true

  smoke-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - windows-latest
          - ubuntu-latest
        smoke-test-suite:
          - jetty
          - liberty
          - payara
          - tomcat
          - tomee
          - websphere
          - wildfly
          - other
        exclude:
          - os: windows-latest
            smoke-test-suite: websphere
      fail-fast: false
    steps:
      - name: Support longpaths
        run: git config --system core.longpaths true
        if: matrix.os == 'windows-latest'

      - uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0

      - name: Set up JDK 11 for running Gradle
        uses: actions/setup-java@v2
        with:
          distribution: adopt
          java-version: 11

      - name: Test
        env:
          GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
          GE_CACHE_USERNAME: ${{ secrets.GE_CACHE_USERNAME }}
          GE_CACHE_PASSWORD: ${{ secrets.GE_CACHE_PASSWORD }}
        uses: gradle/gradle-build-action@v2
        with:
          arguments: :smoke-tests:test -PsmokeTestSuite=${{ matrix.smoke-test-suite }}

  setup-muzzle-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0

      - name: Set up JDK 11 for running Gradle
        uses: actions/setup-java@v2
        with:
          distribution: adopt
          java-version: 11

      - name: Cache Gradle Wrapper
        uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-cache-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}

      - id: set-matrix
        run: echo "::set-output name=matrix::{\"module\":[\"$(./gradlew -q instrumentation:listInstrumentations | xargs echo | sed 's/ /","/g')\"]}"

  muzzle:
    needs: setup-muzzle-matrix
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{fromJson(needs.setup-muzzle-matrix.outputs.matrix)}}
      fail-fast: false
    steps:
      - name: Check out repository
        uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0

      - name: Set up JDK 11 for running Gradle
        uses: actions/setup-java@v2
        with:
          distribution: adopt
          java-version: 11

      - name: Cache Gradle Wrapper
        uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-cache-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}

      - name: Run muzzle
        # using retry because of sporadic gradle download failures
        uses: nick-invision/retry@v2.6.0
        with:
          # timing out has not been a problem, these jobs typically finish in 2-3 minutes
          timeout_minutes: 15
          max_attempts: 3
          command: ./gradlew ${{ matrix.module }}:muzzle

  examples:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0

      - name: Set up JDK 11 for running Gradle
        uses: actions/setup-java@v2
        with:
          distribution: adopt
          java-version: 11

      - name: Local publish of artifacts
        uses: gradle/gradle-build-action@v2
        with:
          # javadoc task fails sporadically fetching https://docs.oracle.com/javase/8/docs/api/
          arguments: publishToMavenLocal -x javadoc

      - name: Local publish of gradle plugins
        uses: gradle/gradle-build-action@v2
        with:
          # javadoc task fails sporadically fetching https://docs.oracle.com/javase/8/docs/api/
          arguments: publishToMavenLocal -x javadoc
          build-root-directory: gradle-plugins
          gradle-executable: ./gradlew

      - name: Build distro
        uses: gradle/gradle-build-action@v2
        with:
          arguments: build --init-script ../../.github/scripts/local.init.gradle.kts
          build-root-directory: examples/distro

      - name: Build extension
        uses: gradle/gradle-build-action@v2
        with:
          arguments: build --init-script ../../.github/scripts/local.init.gradle.kts
          build-root-directory: examples/extension

      - name: Run muzzle check against extension
        uses: gradle/gradle-build-action@v2
        with:
          cache-read-only: true
          arguments: muzzle --init-script ../../.github/scripts/local.init.gradle.kts
          build-root-directory: examples/extension

  snapshot:
    runs-on: ubuntu-latest
    # intentionally not blocking snapshot publishing on testLatestDeps
    # because any time a new library version is released to maven central
    # it can fail due to test code incompatibility with the new library version,
    # or due to slight changes in emitted telemetry
    needs: [ build, test, smoke-test, examples, muzzle ]
    if: github.repository == 'open-telemetry/opentelemetry-java-instrumentation'
    steps:
      - uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0

      - name: Set up JDK 11 for running Gradle
        uses: actions/setup-java@v2
        with:
          distribution: adopt
          java-version: 11

      - name: Build and publish artifact snapshots
        env:
          GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
          SONATYPE_USER: ${{ secrets.SONATYPE_USER }}
          SONATYPE_KEY: ${{ secrets.SONATYPE_KEY }}
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          GPG_PASSWORD: ${{ secrets.GPG_PASSWORD }}
        uses: gradle/gradle-build-action@v2
        with:
          arguments: assemble publishToSonatype

      - name: Build and publish gradle plugin snapshots
        env:
          GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
          SONATYPE_USER: ${{ secrets.SONATYPE_USER }}
          SONATYPE_KEY: ${{ secrets.SONATYPE_KEY }}
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          GPG_PASSWORD: ${{ secrets.GPG_PASSWORD }}
        uses: gradle/gradle-build-action@v2
        with:
          arguments: build publishToSonatype
          build-root-directory: gradle-plugins
          gradle-executable: ./gradlew
